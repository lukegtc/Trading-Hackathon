{"changed":false,"filter":false,"title":"simple_pairs_trading.py","tooltip":"/pairs_trading_strat/simple_pairs_trading.py","undoManager":{"mark":40,"position":40,"stack":[[{"start":{"row":3,"column":16},"end":{"row":4,"column":0},"action":"insert","lines":["",""],"id":2}],[{"start":{"row":0,"column":18},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":3}],[{"start":{"row":1,"column":0},"end":{"row":8,"column":49},"action":"insert","lines":["import numpy as np","import pandas as pd","import statsmodels","import statsmodels.api as sm","from statsmodels.tsa.stattools import coint, adfuller","","import matplotlib.pyplot as plt","import seaborn as sns; sns.set(style=\"whitegrid\")"],"id":4}],[{"start":{"row":1,"column":0},"end":{"row":2,"column":0},"action":"remove","lines":["import numpy as np",""],"id":5}],[{"start":{"row":7,"column":0},"end":{"row":7,"column":2},"action":"insert","lines":["# "],"id":6}],[{"start":{"row":11,"column":0},"end":{"row":12,"column":0},"action":"insert","lines":["",""],"id":7},{"start":{"row":12,"column":0},"end":{"row":13,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":13,"column":0},"end":{"row":16,"column":38},"action":"insert","lines":["def generate_data(params):","    mu = params[0]","    sigma = params[1]","    return np.random.normal(mu, sigma)"],"id":8}],[{"start":{"row":16,"column":38},"end":{"row":17,"column":0},"action":"insert","lines":["",""],"id":9},{"start":{"row":17,"column":0},"end":{"row":17,"column":4},"action":"insert","lines":["    "]},{"start":{"row":17,"column":4},"end":{"row":18,"column":0},"action":"insert","lines":["",""]},{"start":{"row":18,"column":0},"end":{"row":18,"column":4},"action":"insert","lines":["    "]},{"start":{"row":18,"column":4},"end":{"row":19,"column":0},"action":"insert","lines":["",""]},{"start":{"row":19,"column":0},"end":{"row":19,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":19,"column":0},"end":{"row":19,"column":4},"action":"remove","lines":["    "],"id":10}],[{"start":{"row":19,"column":0},"end":{"row":19,"column":29},"action":"insert","lines":["A = pd.Series(index=range(T))"],"id":11}],[{"start":{"row":18,"column":0},"end":{"row":18,"column":4},"action":"remove","lines":["    "],"id":12}],[{"start":{"row":18,"column":0},"end":{"row":19,"column":0},"action":"insert","lines":["",""],"id":13},{"start":{"row":19,"column":0},"end":{"row":20,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":19,"column":0},"end":{"row":22,"column":0},"action":"insert","lines":["# Set the parameters and the number of datapoints","params = (0, 1)","T = 100",""],"id":14}],[{"start":{"row":24,"column":29},"end":{"row":25,"column":0},"action":"insert","lines":["",""],"id":15}],[{"start":{"row":25,"column":0},"end":{"row":48,"column":31},"action":"insert","lines":["A.name = 'A'","","for t in range(T):","    A[t] = generate_data(params)","","T = 100","","B = pd.Series(index=range(T))","B.name = 'B'","","for t in range(T):","    # Now the parameters are dependent on time","    # Specifically, the mean of the series changes over time","    params = (t * 0.1, 1)","    B[t] = generate_data(params)","    ","fig, (ax1, ax2) = plt.subplots(nrows =1, ncols =2, figsize=(16,6))","","ax1.plot(A)","ax2.plot(B)","ax1.legend(['Series A'])","ax2.legend(['Series B'])","ax1.set_title('Stationary')","ax2.set_title('Non-Stationary')"],"id":16}],[{"start":{"row":48,"column":31},"end":{"row":49,"column":0},"action":"insert","lines":["",""],"id":17},{"start":{"row":49,"column":0},"end":{"row":49,"column":1},"action":"insert","lines":["p"]},{"start":{"row":49,"column":1},"end":{"row":49,"column":2},"action":"insert","lines":["l"]},{"start":{"row":49,"column":2},"end":{"row":49,"column":3},"action":"insert","lines":["t"]},{"start":{"row":49,"column":3},"end":{"row":49,"column":4},"action":"insert","lines":["."]}],[{"start":{"row":49,"column":4},"end":{"row":49,"column":5},"action":"insert","lines":["s"],"id":18},{"start":{"row":49,"column":5},"end":{"row":49,"column":6},"action":"insert","lines":["h"]},{"start":{"row":49,"column":6},"end":{"row":49,"column":7},"action":"insert","lines":["o"]},{"start":{"row":49,"column":7},"end":{"row":49,"column":8},"action":"insert","lines":["w"]}],[{"start":{"row":49,"column":8},"end":{"row":49,"column":10},"action":"insert","lines":["()"],"id":19}],[{"start":{"row":49,"column":10},"end":{"row":50,"column":0},"action":"insert","lines":["",""],"id":20},{"start":{"row":50,"column":0},"end":{"row":51,"column":0},"action":"insert","lines":["",""]},{"start":{"row":51,"column":0},"end":{"row":51,"column":1},"action":"insert","lines":["p"]},{"start":{"row":51,"column":1},"end":{"row":51,"column":2},"action":"insert","lines":["r"]},{"start":{"row":51,"column":2},"end":{"row":51,"column":3},"action":"insert","lines":["i"]},{"start":{"row":51,"column":3},"end":{"row":51,"column":4},"action":"insert","lines":["n"]}],[{"start":{"row":51,"column":4},"end":{"row":51,"column":5},"action":"insert","lines":["t"],"id":21}],[{"start":{"row":51,"column":5},"end":{"row":51,"column":7},"action":"insert","lines":["()"],"id":22}],[{"start":{"row":51,"column":6},"end":{"row":51,"column":7},"action":"insert","lines":["B"],"id":23}],[{"start":{"row":14,"column":0},"end":{"row":14,"column":4},"action":"remove","lines":["    "],"id":24},{"start":{"row":13,"column":26},"end":{"row":14,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":13,"column":26},"end":{"row":14,"column":0},"action":"insert","lines":["",""],"id":25},{"start":{"row":14,"column":0},"end":{"row":14,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":15,"column":0},"end":{"row":15,"column":4},"action":"remove","lines":["    "],"id":26},{"start":{"row":14,"column":18},"end":{"row":15,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":14,"column":18},"end":{"row":15,"column":0},"action":"insert","lines":["",""],"id":27},{"start":{"row":15,"column":0},"end":{"row":15,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":12,"column":0},"end":{"row":13,"column":0},"action":"remove","lines":["",""],"id":28}],[{"start":{"row":12,"column":0},"end":{"row":13,"column":0},"action":"insert","lines":["",""],"id":29}],[{"start":{"row":11,"column":0},"end":{"row":12,"column":0},"action":"insert","lines":["",""],"id":30}],[{"start":{"row":12,"column":0},"end":{"row":18,"column":12},"action":"insert","lines":["# Set the parameters and the number of datapoints","params = (0, 1)","T = 100","","","A = pd.Series(index=range(T))","A.name = 'A'"],"id":31}],[{"start":{"row":26,"column":0},"end":{"row":32,"column":12},"action":"remove","lines":["# Set the parameters and the number of datapoints","params = (0, 1)","T = 100","","","A = pd.Series(index=range(T))","A.name = 'A'"],"id":32},{"start":{"row":25,"column":0},"end":{"row":26,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":14,"column":7},"end":{"row":15,"column":0},"action":"insert","lines":["",""],"id":34},{"start":{"row":15,"column":0},"end":{"row":16,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":20,"column":12},"end":{"row":21,"column":0},"action":"insert","lines":["",""],"id":35},{"start":{"row":21,"column":0},"end":{"row":22,"column":0},"action":"insert","lines":["",""]},{"start":{"row":22,"column":0},"end":{"row":23,"column":0},"action":"insert","lines":["",""]},{"start":{"row":23,"column":0},"end":{"row":24,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":24,"column":0},"end":{"row":24,"column":8},"action":"insert","lines":["print(B)"],"id":36}],[{"start":{"row":24,"column":6},"end":{"row":24,"column":7},"action":"remove","lines":["B"],"id":37},{"start":{"row":24,"column":6},"end":{"row":24,"column":7},"action":"insert","lines":["A"]}],[{"start":{"row":1,"column":7},"end":{"row":2,"column":7},"action":"insert","lines":["matplotlib.pyplot as plt","import "],"id":38,"ignore":true},{"start":{"row":6,"column":0},"end":{"row":8,"column":2},"action":"remove","lines":["","import matplotlib.pyplot as plt","# "]},{"start":{"row":8,"column":0},"end":{"row":9,"column":16},"action":"remove","lines":["x = np.array([1, 2, 3])","print(f\"x= {x}\")"]}],[{"start":{"row":10,"column":0},"end":{"row":20,"column":0},"action":"insert","lines":["","","","def generate_data(params):","    mu = params[0]","    sigma = params[1]","    return np.random.normal(mu, sigma)","    ","","##########################",""],"id":39,"ignore":true},{"start":{"row":24,"column":0},"end":{"row":27,"column":0},"action":"remove","lines":["","","",""]},{"start":{"row":27,"column":0},"end":{"row":38,"column":0},"action":"remove","lines":["","","print(A)","","def generate_data(params):","    mu = params[0]","    sigma = params[1]","    return np.random.normal(mu, sigma)","    ","","",""]},{"start":{"row":51,"column":0},"end":{"row":51,"column":8},"action":"remove","lines":["print(B)"]}],[{"start":{"row":18,"column":0},"end":{"row":48,"column":16},"action":"remove","lines":["","##########################","# Set the parameters and the number of datapoints","params = (0, 1)","T = 100","","A = pd.Series(index=range(T))","A.name = 'A'","","for t in range(T):","    A[t] = generate_data(params)","","T = 100","","B = pd.Series(index=range(T))","B.name = 'B'","","for t in range(T):","    # Now the parameters are dependent on time","    # Specifically, the mean of the series changes over time","    params = (t * 0.1, 1)","    B[t] = generate_data(params)","    ","fig, (ax1, ax2) = plt.subplots(nrows =1, ncols =2, figsize=(16,6))","","ax1.plot(A)","ax2.plot(B)","ax1.legend(['Series A'])","ax2.legend(['Series B'])","ax1.set_title('Stationary')","ax2.set_title('N"],"id":40,"ignore":true},{"start":{"row":18,"column":0},"end":{"row":27,"column":81},"action":"insert","lines":["    ","    ","def adfuller_ts_(X, cutoff=0.01):","    # H_0 in adfuller is unit root exists (non-stationary)","    # We must observe significant p-value to convince ourselves that the series is stationary","    pvalue = adfuller(X)[1]","    if pvalue < cutoff:","        print('p-value = ' + str(pvalue) + ' The series ' + X.name +' is likely stationary.')","    else:","        print('p-value = ' + str(pvalue) + ' The series ' + X.name +' is likely n"]},{"start":{"row":27,"column":84},"end":{"row":27,"column":85},"action":"remove","lines":["S"]},{"start":{"row":27,"column":84},"end":{"row":27,"column":85},"action":"insert","lines":["s"]},{"start":{"row":27,"column":94},"end":{"row":27,"column":95},"action":"insert","lines":["."]},{"start":{"row":27,"column":96},"end":{"row":28,"column":9},"action":"remove","lines":[")","plt.show("]},{"start":{"row":28,"column":0},"end":{"row":29,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":6,"column":0},"end":{"row":6,"column":2},"action":"insert","lines":["# "],"id":41,"ignore":true},{"start":{"row":19,"column":0},"end":{"row":20,"column":0},"action":"remove","lines":["    ",""]},{"start":{"row":19,"column":16},"end":{"row":19,"column":20},"action":"insert","lines":["test"]},{"start":{"row":20,"column":0},"end":{"row":21,"column":0},"action":"insert","lines":["    # stationarity_test",""]}],[{"start":{"row":25,"column":0},"end":{"row":26,"column":0},"action":"insert","lines":["        # TS is likely stationary",""],"id":42,"ignore":true},{"start":{"row":28,"column":8},"end":{"row":28,"column":15},"action":"remove","lines":["print('"]},{"start":{"row":28,"column":8},"end":{"row":34,"column":15},"action":"insert","lines":["# TS is likely not stationary","        return ","        print('')","    else:","        # TS is likely not stationary","        # return False","        print(\""]}],[{"start":{"row":19,"column":21},"end":{"row":19,"column":22},"action":"remove","lines":["X"],"id":43,"ignore":true},{"start":{"row":19,"column":21},"end":{"row":19,"column":23},"action":"insert","lines":["ts"]},{"start":{"row":23,"column":22},"end":{"row":23,"column":23},"action":"remove","lines":["X"]},{"start":{"row":23,"column":22},"end":{"row":23,"column":24},"action":"insert","lines":["ts"]},{"start":{"row":26,"column":7},"end":{"row":28,"column":9},"action":"insert","lines":[" return True","        print(f\"p-val= {pvalue} | Series: {ts.name}\")","        #"]},{"start":{"row":31,"column":7},"end":{"row":31,"column":9},"action":"insert","lines":[" #"]},{"start":{"row":31,"column":17},"end":{"row":31,"column":22},"action":"insert","lines":["False"]},{"start":{"row":32,"column":14},"end":{"row":36,"column":7},"action":"remove","lines":["'')","    else:","        # TS is likely not stationary","        # return False","       "]},{"start":{"row":32,"column":14},"end":{"row":33,"column":9},"action":"insert","lines":["f\"p-val= {pvalue} | Series: {ts.name}\")","        #"]},{"start":{"row":33,"column":16},"end":{"row":33,"column":17},"action":"remove","lines":["\""]},{"start":{"row":33,"column":16},"end":{"row":33,"column":17},"action":"insert","lines":["'"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":34,"column":0},"end":{"row":34,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1648909651183}